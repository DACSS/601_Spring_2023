---
title: "Challenge 3 Instructions"
author: "Meredith Rolfe"
description: "Tidy Data: Pivoting"
date: "08/17/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - animal_weights
  - eggs
  - australian_marriage
  - usa_households
  - sce_labor
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   animal_weights.csv ⭐
-   eggs_tidy.csv ⭐⭐ or organiceggpoultry.xls ⭐⭐⭐
-   australian_marriage\*.xls ⭐⭐⭐
-   USA Households\*.xlsx ⭐⭐⭐⭐
-   sce_labor_chart_data_public.xlsx 🌟🌟🌟🌟🌟

```{r}
library(readr)
data <- read_csv("_data/eggs_tidy.csv",show_col_types = FALSE)
head(data)

```

### Briefly describe the data

Describe the data, and be sure to comment on why you are planning to pivot it to make it "tidy"

The dataset consists of egg prices observed on a monthly basis between 2004 and 2013. It has dimensions of 120 rows and 6 columns.The data is aggregated based on different egg carton sizes, including large_half_dozen, large_dozen, extra_large_half_dozen, and extra_large_dozen. According to the analysis, the average price for large_half_dozen egg cartons is \$155.2, while the average price for large_dozen egg cartons is \$254.2. Furthermore, the average price for extra_large_half_dozen egg cartons is \$164.2, and the average price for extra_large_dozen egg cartons is \$266.8. These figures provide insights into the average prices associated with each specific egg carton size categor. However, the current format of the dataset violates the "tidy" data principle, which requires each observation to be represented in a separate row. To rectify this, we can pivot the columns representing different sizes and quantities of eggs (e.g., large_half_dozen, large_dozen, extra_large_half_dozen, extra_large_dozen). By doing so, we will create two new columns - "type" with values "large" and "extra_large", and "quantity" with values "dozen" and "half_dozen". This transformation will convert the dataset into a tidy format, adhering to the principles of tidy data.

```{r}
summary(data)
dim(data)
```

## Anticipate the End Result

The first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.

One easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.

Suppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!

### Example: find current and future data dimensions

Lets see if this works with a simple example.

```{r}
#| tbl-cap: Example

df<-tibble(country = rep(c("Mexico", "USA", "France"),2),
           year = rep(c(1980,1990), 3), 
           trade = rep(c("NAFTA", "NAFTA", "EU"),2),
           outgoing = rnorm(6, mean=1000, sd=500),
           incoming = rlogis(6, location=1000, 
                             scale = 400))
df

#existing rows/cases
nrow(df)

#existing columns/cases
ncol(df)

#expected rows/cases
nrow(df) * (ncol(df)-3)

# expected columns 
3 + 2
```

Or simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.

### Challenge: Describe the final dimensions

Document your work here.

```{r}
dim(data)
cat(paste("The number of rows in the dataset are", nrow(data)))


```

Any additional comments?

Here, we are pivoting four columns, and the number of rows in the original dataset (data) is 120. After pivoting, the resulting number of rows would be equal to \`nrows(df) \* 4 = 120 \* 4 = 480\`. Additionally, the number of columns after pivoting would be 3 + 2 = 5. Therefore, the final dimension of the dataset would be 480 rows by 5 columns.

## Pivot the Data

Now we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a "sanity" check.

### Example

```{r}
#| tbl-cap: Pivoted Example

df<-pivot_longer(df, col = c(outgoing, incoming),
                 names_to="trade_direction",
                 values_to = "trade_value")
df
```

Yes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!

### Challenge: Pivot the Chosen Data

Document your work here. What will a new "case" be once you have pivoted the data? How does it meet requirements for tidy data?

```{r}
EggsPivot <- data %>% 
  pivot_longer(
    cols = -c(month, year),
    names_to = c("size", "quantity"),
    names_pattern = "(.+)_(.+)",
    values_to = "price"
  )

EggsPivot
```

Any additional comments?
